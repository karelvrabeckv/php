<?php

namespace App\Model;

use App\Db;

class Transaction
{
    /** @var integer */
    protected $id;

    /** @var Account */
    protected $from;

    /** @var Account */
    protected $to;

    /** @var float */
    protected $amount;

    /**
     * Transaction constructor.
     *
     * @param Account $from
     * @param Account $to
     * @param float   $amount
     */
    public function __construct(Account $from, Account $to, float $amount)
    {
        $this->from = $from;
        $this->to = $to;
        $this->amount = $amount;
    }

    /**
     * Creates DB table using CREATE TABLE ...
     */
    public static function createTable(): void
    {
        $db = Db::get();
        $db->query('
		
			CREATE TABLE IF NOT EXISTS `transaction` (
				t_id     INTEGER PRIMARY KEY AUTOINCREMENT,
				t_amount DECIMAL NOT NULL,
				t_from   INTEGER NOT NULL,
				t_to     INTEGER NOT NULL
			)
			
		');
    }

    /**
     * Drops DB table using DROP TABLE ...
     */
    public static function dropTable()
    {
        $db = Db::get();
        $db->query('
			
			DROP TABLE IF EXISTS `transaction`
			
		');
    }

    /**
     * Insert this instance into DB table `transaction`
     *
     * @return int - inserted item autogenerated ID
     */
    public function insert(): int
    {
        $db = Db::get();
        $statement = $db->prepare('
			
			INSERT INTO `transaction` (t_amount, t_from, t_to) VALUES (:amount, :from, :to)
			
		');
		$statement->execute([
			'amount' => $this->amount,
			'from'   => $this->from->getId(),
			'to'     => $this->to->getId()
		]);
		
		return $db->lastInsertId();
    }

    /**
     * @return int
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * @param int $id
     * @return Transaction
     */
    public function setId(int $id): Transaction
    {
        $this->id = $id;

        return $this;
    }

    /**
     * @return Account
     */
    public function getFrom(): Account
    {
        return $this->from;
    }

    /**
     * @param Account $from
     * @return Transaction
     */
    public function setFrom(Account $from): Transaction
    {
        $this->from = $from;

        return $this;
    }

    /**
     * @return Account
     */
    public function getTo(): Account
    {
        return $this->to;
    }

    /**
     * @param Account $to
     * @return Transaction
     */
    public function setTo(Account $to): Transaction
    {
        $this->to = $to;

        return $this;
    }

    /**
     * @return float
     */
    public function getAmount(): float
    {
        return $this->amount;
    }

    /**
     * @param float $amount
     * @return Transaction
     */
    public function setAmount(float $amount): Transaction
    {
        $this->amount = $amount;

        return $this;
    }
}
